# encoding: utf-8
# 2020 R1
SetScriptVersion(Version="20.1.164")
system1 = GetSystem(Name="FFF")
setupComponent1 = system1.GetComponent(Name="Setup")
setupComponent1.Refresh()
setup1 = system1.GetContainer(ComponentName="Setup")
fluentLauncherSettings1 = setup1.GetFluentLauncherSettings()
fluentLauncherSettings1.SetEntityProperties(Properties=Set(Precision="Double", EnvPath={}, RunParallel=True))
setup1.Edit()
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "General*Table1*ButtonBox1(Mesh)*PushButton4(Units)")')
setup1.SendCommand(Command="(cx-gui-do cx-set-list-selections \"Set Units*List1(Quantities)\" '( 61))(cx-gui-do cx-activate-item \"Set Units*List1(Quantities)\")(cx-gui-do cx-activate-item \"Set Units*PanelButtons*PushButton1(OK)\")(cx-gui-do cx-set-text-entry \"Define Unit*TextEntry2(Unit)\" \"mmhg\")(cx-gui-do cx-set-real-entry-list \"Define Unit*RealEntry3(Factor)\" '( 133.322))(cx-gui-do cx-activate-item \"Define Unit*PanelButtons*PushButton1(OK)\")")
setup1.SendCommand(Command="(cx-gui-do cx-set-list-selections \"Set Units*List1(Quantities)\" '( 39))(cx-gui-do cx-activate-item \"Set Units*List1(Quantities)\")(cx-gui-do cx-set-list-selections \"Set Units*Frame4*List1(Units)\" '( 1))(cx-gui-do cx-activate-item \"Set Units*Frame4*List1(Units)\")(cx-gui-do cx-activate-item \"Set Units*PanelButtons*PushButton2(Cancel)\")")
setup1.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Setup|Models|Viscous (SST k-omega)"))(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Setup|Models|Radiation (Off)"))(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Setup|Models|Viscous (SST k-omega)"))')
setup1.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Setup|Models|Viscous (SST k-omega)"))(cx-gui-do cx-activate-item "NavigationPane*List_Tree1")')
setup1.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Setup|Models|Viscous (SST k-omega)"))(cx-gui-do cx-set-toggle-button2 "Viscous Model*Table1*ToggleBox1(Model)*Laminar" #t)(cx-gui-do cx-activate-item "Viscous Model*Table1*ToggleBox1(Model)*Laminar")(cx-gui-do cx-activate-item "Viscous Model*PanelButtons*PushButton1(OK)")')
setup1.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Setup|Models|Viscous (Laminar)"))(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Setup|Materials|Fluid|air"))(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Setup|Materials|Fluid|air"))(cx-gui-do cx-list-tree-right-click "NavigationPane*List_Tree1" )')
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "MenuBar*PopupMenuTree-air*Edit...")')
setup1.SendCommand(Command="(cx-gui-do cx-set-text-entry \"Create/Edit Materials*Table1*Frame1*Table1*TextEntry1(Name)\" \"blood-newtn\")(cx-gui-do cx-set-real-entry-list \"Create/Edit Materials*RealEntry10\" '( 1060))(cx-gui-do cx-set-real-entry-list \"Create/Edit Materials*RealEntry16\" '( 0.00278))")
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "Create/Edit Materials*PanelButtons*PushButton3(Change/Create)")(cx-gui-do cx-activate-item "Question*OK")')
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "Create/Edit Materials*PanelButtons*PushButton1(Close)")')
setup1.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Setup|Materials|Fluid|blood-newtn"))(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Setup|Boundary Conditions|Inlet"))(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Setup|Boundary Conditions|Inlet|inlet (velocity-inlet, id=6)"))(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Setup|Boundary Conditions|Inlet|inlet (velocity-inlet, id=6)"))(cx-gui-do cx-list-tree-right-click "NavigationPane*List_Tree1" )(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list ))')
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "Ribbon*Frame1*Frame4(User-Defined)*Table1*Table3(User Defined)*PushButton1(Functions)")')
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "MenuBar*PopupMenuFunctions*Interpreted...")')
setup1.SendCommand(Command="(cx-gui-do cx-activate-item \"Interpreted UDFs*Table1*PushButton3(Browse)\")(cx-gui-do cx-set-file-dialog-entries \"Select File\" '( \"C:/Users/MUNEE/Desktop/Virtual_Trial/GroundTruth/V_in_cfr_2.c\") \"UDF Source Files (*.c)\")")
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "Interpreted UDFs*PanelButtons*PushButton1(OK)")')
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "Interpreted UDFs*PanelButtons*PushButton2(Cancel)")')
setup1.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Setup|Boundary Conditions|Inlet|inlet (velocity-inlet, id=6)"))')
setup1.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Setup|Boundary Conditions|Inlet|inlet (velocity-inlet, id=6)"))(cx-gui-do cx-activate-item "NavigationPane*List_Tree1")')
setup1.SendCommand(Command="(cx-gui-do cx-set-list-tree-selections \"NavigationPane*List_Tree1\" (list \"Setup|Boundary Conditions|Inlet|inlet (velocity-inlet, id=6)\"))(cx-gui-do cx-set-expression-entry \"Velocity Inlet*Frame3*Frame1(Momentum)*Table1*Table8*ExpressionEntry1(Velocity Magnitude)\" '(\"udf inlet_velocity\" . 3))(cx-gui-do cx-set-expression-entry \"Velocity Inlet*Frame3*Frame1(Momentum)*Table1*Table14*ExpressionEntry1(Supersonic/Initial Gauge Pressure)\" '(\"15958.6434\" . 0))(cx-gui-do cx-set-expression-entry \"Velocity Inlet*Frame3*Frame1(Momentum)*Table1*Table14*ExpressionEntry1(Supersonic/Initial Gauge Pressure)\" '(\"15958.6434\" . 0))(cx-gui-do cx-activate-item \"Velocity Inlet*PanelButtons*PushButton1(OK)\")")
setup1.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Setup|Boundary Conditions|Outlet|outlet (pressure-outlet, id=7)"))')
setup1.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Setup|Boundary Conditions|Outlet|outlet (pressure-outlet, id=7)"))(cx-gui-do cx-activate-item "NavigationPane*List_Tree1")')
setup1.SendCommand(Command="(cx-gui-do cx-set-list-tree-selections \"NavigationPane*List_Tree1\" (list \"Setup|Boundary Conditions|Outlet|outlet (pressure-outlet, id=7)\"))(cx-gui-do cx-set-toggle-button2 \"Pressure Outlet*Frame3*Frame1(Momentum)*Table1*CheckButton20(Target Mass Flow Rate)\" #t)(cx-gui-do cx-activate-item \"Pressure Outlet*Frame3*Frame1(Momentum)*Table1*CheckButton20(Target Mass Flow Rate)\")(cx-gui-do cx-set-expression-entry \"Pressure Outlet*Frame3*Frame1(Momentum)*Table1*Table21*ExpressionEntry1(Target Mass Flow)\" '(\"0.001413\" . 0))(cx-gui-do cx-set-expression-entry \"Pressure Outlet*Frame3*Frame1(Momentum)*Table1*Table22*ExpressionEntry1(Upper Limit of Absolute Pressure)\" '(\"15958.6434\" . 0))(cx-gui-do cx-set-expression-entry \"Pressure Outlet*Frame3*Frame1(Momentum)*Table1*Table23*ExpressionEntry1(Lower Limit of Absolute Pressure)\" '(\"0\" . 0))(cx-gui-do cx-set-expression-entry \"Pressure Outlet*Frame3*Frame1(Momentum)*Table1*Table23*ExpressionEntry1(Lower Limit of Absolute Pressure)\" '(\"0\" . 0))(cx-gui-do cx-activate-item \"Pressure Outlet*PanelButtons*PushButton1(OK)\")")
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "Ribbon*Frame1*Frame3(Physics)*Table1*Table3(Solver)*PushButton2(Operating Conditions)")')
setup1.SendCommand(Command="(cx-gui-do cx-set-expression-entry \"Operating Conditions*Frame1*Table1(Pressure)*ExpressionEntry2(Operating Pressure)\" '(\"0\" . 0))(cx-gui-do cx-set-expression-entry \"Operating Conditions*Frame1*Table1(Pressure)*ExpressionEntry2(Operating Pressure)\" '(\"0\" . 0))(cx-gui-do cx-activate-item \"Operating Conditions*PanelButtons*PushButton1(OK)\")")
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "Ribbon*Frame1*Frame2(Domain)*Table1*Table3(Mesh)*PushButton1(Display)")')
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "Mesh Display*Table1*Frame3*PushButton2(New Surface)")')
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "MenuBar*PopupMenuNewSurface*Plane...")')
setup1.SendCommand(Command="(cx-gui-do cx-set-list-selections \"Plane Surface*Table2*Table1(Method)*DropDownList1\" '( 0))")
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "Plane Surface*Table2*Table1(Method)*DropDownList1")')
setup1.SendCommand(Command="(cx-gui-do cx-set-list-selections \"Plane Surface*Table2*Table1(Method)*DropDownList1\" '( 1))")
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "Plane Surface*Table2*Table1(Method)*DropDownList1")')
setup1.SendCommand(Command="(cx-gui-do cx-set-list-selections \"Plane Surface*Table2*Table1(Method)*DropDownList1\" '( 2))")
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "Plane Surface*Table2*Table1(Method)*DropDownList1")')
setup1.SendCommand(Command='(cx-gui-do cx-set-text-entry "Plane Surface*TextEntry1(New Surface Name)" "slice-2cm")(cx-use-window-id 1)(cx-use-window-id 1)(cx-use-window-id 1)(cx-use-window-id 1)(cx-use-window-id 1)(cx-use-window-id 1)(cx-use-window-id 1)')
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "ToolBar*Projection*ortho")')
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "ToolBar*Projection*persp")')
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "ToolBar*Projection*persp")')
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "ToolBar*Projection*persp")')
setup1.SendCommand(Command="(cx-gui-do cx-set-real-entry-list \"Plane Surface*Table2*Frame2*Table1*Table1(Point)*RealEntry3(Z)\" '( 0.02))(cx-gui-do cx-activate-item \"Plane Surface*Table2*Frame2*Table1*Table1(Point)*RealEntry3(Z)\")")
setup1.SendCommand(Command="(cx-use-window-id 1)(cx-use-window-id 1)(cx-use-window-id 1)(cx-use-window-id 1)(cx-use-window-id 1)(cx-use-window-id 1)(cx-set-camera-relative '(0.00523737 -0.00291669 -0.0695525) '(0 0 0) '(-0.00630371 -1.9908e-05 -0.000241627) 0 0)(cx-gui-do cx-activate-item \"Plane Surface*PanelButtons*PushButton1(OK)\")")
setup1.SendCommand(Command="(cx-gui-do cx-set-text-entry \"Plane Surface*TextEntry1(New Surface Name)\" \"slice-4cm\")(cx-gui-do cx-set-real-entry-list \"Plane Surface*Table2*Frame2*Table1*Table1(Point)*RealEntry3(Z)\" '( 0.04))(cx-gui-do cx-activate-item \"Plane Surface*Table2*Frame2*Table1*Table1(Point)*RealEntry3(Z)\")")
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "Plane Surface*PanelButtons*PushButton1(OK)")')
setup1.SendCommand(Command="(cx-gui-do cx-set-text-entry \"Plane Surface*TextEntry1(New Surface Name)\" \"slice-6cm\")(cx-gui-do cx-set-real-entry-list \"Plane Surface*Table2*Frame2*Table1*Table1(Point)*RealEntry3(Z)\" '( 0.06))(cx-gui-do cx-activate-item \"Plane Surface*Table2*Frame2*Table1*Table1(Point)*RealEntry3(Z)\")")
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "Plane Surface*PanelButtons*PushButton1(OK)")')
setup1.SendCommand(Command="(cx-use-window-id 1)(cx-use-window-id 1)(cx-set-camera-relative '(-0.0336385 0.135605 0.251376) '(0 0 0) '(0.0166616 -3.93987e-05 0.00359689) 0 0)(cx-gui-do cx-set-text-entry \"Plane Surface*TextEntry1(New Surface Name)\" \"slice-8cm\")(cx-gui-do cx-set-real-entry-list \"Plane Surface*Table2*Frame2*Table1*Table1(Point)*RealEntry3(Z)\" '( 0.08))(cx-gui-do cx-activate-item \"Plane Surface*Table2*Frame2*Table1*Table1(Point)*RealEntry3(Z)\")")
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "ToolBar*Projection*persp")')
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "ToolBar*Projection*ortho")')
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "ToolBar*Projection*persp")')
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "ToolBar*Projection*ortho")')
setup1.SendCommand(Command="(cx-use-window-id 1)(cx-set-camera-relative '(-0.000845522 0.000730284 0.0140369) '(0 0 0) '(0.00627677 -8.69036e-05 0.000624636) 0 0)(cx-gui-do cx-activate-item \"Plane Surface*PanelButtons*PushButton1(OK)\")")
setup1.SendCommand(Command="(cx-gui-do cx-set-text-entry \"Plane Surface*TextEntry1(New Surface Name)\" \"slice-7cm\")(cx-gui-do cx-set-real-entry-list \"Plane Surface*Table2*Frame2*Table1*Table1(Point)*RealEntry3(Z)\" '( 0.07))(cx-gui-do cx-activate-item \"Plane Surface*Table2*Frame2*Table1*Table1(Point)*RealEntry3(Z)\")")
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "Plane Surface*PanelButtons*PushButton1(OK)")')
setup1.SendCommand(Command="(cx-gui-do cx-set-text-entry \"Plane Surface*TextEntry1(New Surface Name)\" \"slice-6.5cm\")(cx-gui-do cx-set-real-entry-list \"Plane Surface*Table2*Frame2*Table1*Table1(Point)*RealEntry3(Z)\" '( 0.065))(cx-gui-do cx-activate-item \"Plane Surface*Table2*Frame2*Table1*Table1(Point)*RealEntry3(Z)\")")
setup1.SendCommand(Command="(cx-gui-do cx-set-real-entry-list \"Plane Surface*Table2*Frame2*Table1*Table1(Point)*RealEntry3(Z)\" '( 0.06))(cx-gui-do cx-activate-item \"Plane Surface*Table2*Frame2*Table1*Table1(Point)*RealEntry3(Z)\")")
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "Plane Surface*PanelButtons*PushButton2(Cancel)")')
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "Mesh Display*PanelButtons*PushButton2(Cancel)")')
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "Ribbon*Frame1*Frame2(Domain)*Table1*Table3(Surface)*PushButton2(Manage)")')
setup1.SendCommand(Command="(cx-gui-do cx-set-list-selections \"Surfaces*Table1*List1(Surfaces)\" '( 4))(cx-gui-do cx-activate-item \"Surfaces*Table1*List1(Surfaces)\")(cx-gui-do cx-set-text-entry \"Surfaces*TextEntry8(Name)\" \"pa-slice-6cm\")")
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "Surfaces*PanelButtons*PushButton5(Group)")')
setup1.SendCommand(Command="(cx-gui-do cx-set-list-selections \"Surfaces*Table1*List1(Surfaces)\" '( 6))(cx-gui-do cx-activate-item \"Surfaces*Table1*List1(Surfaces)\")(cx-gui-do cx-set-text-entry \"Surfaces*TextEntry8(Name)\" \"pd-slice-8cm\")")
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "Surfaces*PanelButtons*PushButton5(Group)")')
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "Surfaces*PanelButtons*PushButton2(Cancel)")')
setup1.SendCommand(Command='(cx-use-window-id 1)(cx-use-window-id 1)(handle-key "control ??")(cx-use-window-id 1)(handle-key "control s")(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Solution|Methods"))')
setup1.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Solution|Methods"))(cx-gui-do cx-activate-item "NavigationPane*List_Tree1")')
setup1.SendCommand(Command="(cx-gui-do cx-set-list-tree-selections \"NavigationPane*List_Tree1\" (list \"Solution|Methods\"))(cx-gui-do cx-set-list-selections \"Solution Methods*Table1*Table2(Pressure-Velocity Coupling)*DropDownList2(Scheme)\" '( 0))")
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "Solution Methods*Table1*Table2(Pressure-Velocity Coupling)*DropDownList2(Scheme)")')
setup1.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Solution|Controls"))')
setup1.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Solution|Controls"))(cx-gui-do cx-activate-item "NavigationPane*List_Tree1")')
setup1.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Solution|Controls"))(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Solution|Report Definitions"))')
setup1.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Solution|Report Definitions"))(cx-gui-do cx-activate-item "NavigationPane*List_Tree1")')
setup1.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Solution|Report Definitions"))(cx-gui-do cx-activate-item "Report Definitions*PanelButtons*PushButton1(Close)")')
setup1.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Solution|Monitors|Residual"))')
setup1.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Solution|Monitors|Residual"))(cx-gui-do cx-activate-item "NavigationPane*List_Tree1")')
setup1.SendCommand(Command="(cx-gui-do cx-set-list-tree-selections \"NavigationPane*List_Tree1\" (list \"Solution|Monitors|Residual\"))(cx-gui-do cx-set-real-entry-list \"Residual Monitors*Table1*Table2*Table1*Table1(Equations)*RealEntry11\" '( 1e-05))(cx-gui-do cx-set-real-entry-list \"Residual Monitors*Table1*Table2*Table1*Table1(Equations)*RealEntry17\" '( 1e-05))(cx-gui-do cx-set-real-entry-list \"Residual Monitors*Table1*Table2*Table1*Table1(Equations)*RealEntry23\" '( 1e-05))(cx-gui-do cx-set-real-entry-list \"Residual Monitors*Table1*Table2*Table1*Table1(Equations)*RealEntry29\" '( 1e-05))(cx-gui-do cx-activate-item \"Residual Monitors*PanelButtons*PushButton1(OK)\")")
setup1.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Solution|Initialization"))')
setup1.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Solution|Initialization"))(cx-gui-do cx-activate-item "NavigationPane*List_Tree1")')
setup1.SendCommand(Command="(cx-gui-do cx-set-list-tree-selections \"NavigationPane*List_Tree1\" (list \"Solution|Initialization\"))(cx-gui-do cx-set-toggle-button2 \"Solution Initialization*Table1*ToggleBox3(Initialization Methods)*Standard Initialization\" #t)(cx-gui-do cx-activate-item \"Solution Initialization*Table1*ToggleBox3(Initialization Methods)*Standard Initialization\")(cx-gui-do cx-set-list-selections \"Solution Initialization*Table1*DropDownList1(Compute from)\" '( 2))")
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "Solution Initialization*Table1*DropDownList1(Compute from)")')
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "Solution Initialization*Table1*Frame8*PushButton1(Initialize)")')
setup1.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Solution|Run Calculation"))')
setup1.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Solution|Run Calculation"))(cx-gui-do cx-activate-item "NavigationPane*List_Tree1")')
setup1.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Solution|Run Calculation"))(cx-gui-do cx-set-integer-entry "Run Calculation*Table1*Table3(Parameters)*Table1*Table1*IntegerEntry1(Number of Iterations)" 1500)(cx-gui-do cx-activate-item "Run Calculation*Table1*Table3(Parameters)*Table1*Table1*IntegerEntry1(Number of Iterations)")')
setup1.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Results|Reports|Surface Integrals"))')
setup1.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Results|Reports|Surface Integrals"))(cx-gui-do cx-activate-item "NavigationPane*List_Tree1")')
setup1.SendCommand(Command="(cx-gui-do cx-set-list-tree-selections \"NavigationPane*List_Tree1\" (list \"Results|Reports|Surface Integrals\"))(cx-gui-do cx-set-list-selections \"Surface Integrals*Table1*DropDownList1(Report Type)\" '( 5))")
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "Surface Integrals*Table1*DropDownList1(Report Type)")')
setup1.SendCommand(Command="(cx-gui-do cx-set-list-selections \"Surface Integrals*Table2*List4(Surfaces)\" '( 2))(cx-gui-do cx-activate-item \"Surface Integrals*Table2*List4(Surfaces)\")(cx-gui-do cx-activate-item \"Surface Integrals*PanelButtons*PushButton1(OK)\")")
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "Surface Integrals*Table1*PushButton5(Save Output Parameter)")(cx-gui-do cx-set-text-entry "Save Output Parameter*Table1(Options)*TextEntry3(Name)" "Pa-6cm")(cx-gui-do cx-activate-item "Save Output Parameter*Table1(Options)*TextEntry3(Name)")(cx-gui-do cx-activate-item "Save Output Parameter*PanelButtons*PushButton1(OK)")')
setup1.SendCommand(Command="(cx-gui-do cx-set-list-selections \"Surface Integrals*Table2*List4(Surfaces)\" '())(cx-gui-do cx-activate-item \"Surface Integrals*Table2*List4(Surfaces)\")(cx-gui-do cx-set-list-selections \"Surface Integrals*Table2*List4(Surfaces)\" '( 3))(cx-gui-do cx-activate-item \"Surface Integrals*Table2*List4(Surfaces)\")(cx-gui-do cx-activate-item \"Surface Integrals*PanelButtons*PushButton1(OK)\")")
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "Surface Integrals*Table1*PushButton5(Save Output Parameter)")(cx-gui-do cx-set-text-entry "Save Output Parameter*Table1(Options)*TextEntry3(Name)" "Pd_8cm")(cx-gui-do cx-activate-item "Save Output Parameter*Table1(Options)*TextEntry3(Name)")(cx-gui-do cx-activate-item "Save Output Parameter*PanelButtons*PushButton1(OK)")')
setup1.SendCommand(Command="(cx-gui-do cx-set-list-selections \"Surface Integrals*Table1*DropDownList1(Report Type)\" '( 19))")
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "Surface Integrals*Table1*DropDownList1(Report Type)")')
setup1.SendCommand(Command="(cx-gui-do cx-set-list-selections \"Surface Integrals*Table2*List4(Surfaces)\" '( 3 5))(cx-gui-do cx-activate-item \"Surface Integrals*Table2*List4(Surfaces)\")(cx-gui-do cx-set-list-selections \"Surface Integrals*Table2*List4(Surfaces)\" '( 5))(cx-gui-do cx-activate-item \"Surface Integrals*Table2*List4(Surfaces)\")(cx-gui-do cx-activate-item \"Surface Integrals*PanelButtons*PushButton1(OK)\")")
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "Surface Integrals*Table1*PushButton5(Save Output Parameter)")(cx-gui-do cx-set-text-entry "Save Output Parameter*Table1(Options)*TextEntry3(Name)" "Q-4cm")(cx-gui-do cx-activate-item "Save Output Parameter*PanelButtons*PushButton1(OK)")')
setup1.SendCommand(Command="(cx-gui-do cx-set-list-selections \"Surface Integrals*Table1*DropDownList1(Report Type)\" '( 10))")
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "Surface Integrals*Table1*DropDownList1(Report Type)")')
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "Surface Integrals*PanelButtons*PushButton1(OK)")')
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "Surface Integrals*PanelButtons*PushButton2(Cancel)")')
setup1.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list ))(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Solution|Run Calculation"))')
setup1.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Solution|Run Calculation"))(cx-gui-do cx-activate-item "NavigationPane*List_Tree1")')
setup1.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Solution|Run Calculation"))')
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "Run Calculation*Table1*Table6(Solution Advancement)*Table1*PushButton1(Calculate)")')
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "Information*OK")(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Parameters & Customization|Parameters|Output Parameters"))(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Parameters & Customization|Parameters|Output Parameters"))(cx-gui-do cx-list-tree-right-click "NavigationPane*List_Tree1" )')
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "MenuBar*PopupMenuTree-Output Parameters*Print All to Console")')
setup1.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Results|Plots|XY Plot"))')
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "Ribbon*Frame1*Frame2(Domain)*Table1*Table3(Mesh)*PushButton1(Display)")')
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "Mesh Display*Table1*Frame3*PushButton2(New Surface)")')
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "MenuBar*PopupMenuNewSurface*Line/Rake...")')
setup1.SendCommand(Command="(cx-gui-do cx-set-real-entry-list \"Line/Rake Surface*Table1*Frame5(End Points)*Table1*RealEntry6(z1)\" '( 1.4))(cx-gui-do cx-set-text-entry \"Line/Rake Surface*Table1*TextEntry1(New Surface Name)\" \"centerline\")")
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "Line/Rake Surface*Table1*TextEntry1(New Surface Name)")')
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "Line/Rake Surface*PanelButtons*PushButton1(OK)")')
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "Line/Rake Surface*PanelButtons*PushButton2(Cancel)")')
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "Mesh Display*Table1*Frame3*PushButton2(New Surface)")')
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "MenuBar*PopupMenuNewSurface*Plane...")')
setup1.SendCommand(Command="(cx-gui-do cx-set-list-selections \"Plane Surface*Table2*Table1(Method)*DropDownList1\" '( 2))")
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "Plane Surface*Table2*Table1(Method)*DropDownList1")')
setup1.SendCommand(Command="(cx-gui-do cx-set-text-entry \"Plane Surface*TextEntry1(New Surface Name)\" \"slice-10cm\")(cx-gui-do cx-set-real-entry-list \"Plane Surface*Table2*Frame2*Table1*Table1(Point)*RealEntry3(Z)\" '( 0.1))(cx-gui-do cx-activate-item \"Plane Surface*Table2*Frame2*Table1*Table1(Point)*RealEntry3(Z)\")")
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "Plane Surface*PanelButtons*PushButton1(OK)")')
setup1.SendCommand(Command="(cx-gui-do cx-set-text-entry \"Plane Surface*TextEntry1(New Surface Name)\" \"slice-12cm\")(cx-gui-do cx-set-real-entry-list \"Plane Surface*Table2*Frame2*Table1*Table1(Point)*RealEntry3(Z)\" '( 0.12))(cx-gui-do cx-activate-item \"Plane Surface*Table2*Frame2*Table1*Table1(Point)*RealEntry3(Z)\")")
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "Plane Surface*PanelButtons*PushButton1(OK)")')
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "Plane Surface*PanelButtons*PushButton2(Cancel)")')
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "Mesh Display*PanelButtons*PushButton2(Cancel)")')
setup1.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Results|Plots|XY Plot"))')
setup1.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Results|Plots|XY Plot"))(cx-gui-do cx-activate-item "NavigationPane*List_Tree1")')
setup1.SendCommand(Command="(cx-gui-do cx-set-list-tree-selections \"NavigationPane*List_Tree1\" (list \"Results|Plots|XY Plot\"))(cx-gui-do cx-set-text-entry \"Solution XY Plot*Table1*TextEntry4(XY Plot Name)\" \"pressure-along-vessel\")(cx-gui-do cx-set-list-selections \"Solution XY Plot*Table1*Table3*Frame3*List1(Surfaces)\" '( 0))(cx-gui-do cx-activate-item \"Solution XY Plot*Table1*Table3*Frame3*List1(Surfaces)\")(cx-gui-do cx-set-list-selections \"Solution XY Plot*Table1*Table3*Table2*DropDownList1(X Axis Function)\" '( 1))")
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "Solution XY Plot*Table1*Table3*Table2*DropDownList1(X Axis Function)")')
setup1.SendCommand(Command="(cx-gui-do cx-set-list-selections \"Solution XY Plot*Table1*Table3*Frame3*List2(Surfaces)\" '( 0))(cx-gui-do cx-activate-item \"Solution XY Plot*Table1*Table3*Frame3*List2(Surfaces)\")(cx-gui-do cx-activate-item \"Solution XY Plot*PanelButtons*PushButton1(OK)\")")
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "Solution XY Plot*PanelButtons*PushButton5(Axes)")')
setup1.SendCommand(Command="(cx-gui-do cx-set-toggle-button2 \"Axes - Solution XY Plot*Table1*Frame1*ToggleBox1(Axis)*Y\" #t)(cx-gui-do cx-activate-item \"Axes - Solution XY Plot*Table1*Frame1*ToggleBox1(Axis)*Y\")(cx-gui-do cx-set-list-selections \"Axes - Solution XY Plot*Table1*Frame3(Number Format)*DropDownList1(Type)\" '( 1))")
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "Axes - Solution XY Plot*Table1*Frame3(Number Format)*DropDownList1(Type)")')
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "Axes - Solution XY Plot*PanelButtons*PushButton1(OK)")')
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "Axes - Solution XY Plot*PanelButtons*PushButton2(Cancel)")')
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "Solution XY Plot*PanelButtons*PushButton1(OK)")')
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "Solution XY Plot*PanelButtons*PushButton2(Cancel)")')
setup1.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Results|Graphics|Vectors"))')
setup1.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Results|Graphics|Vectors"))(cx-gui-do cx-activate-item "NavigationPane*List_Tree1")')
setup1.SendCommand(Command="(cx-gui-do cx-set-list-tree-selections \"NavigationPane*List_Tree1\" (list \"Results|Graphics|Vectors\"))(cx-gui-do cx-set-text-entry \"Vectors*Table1*Frame1*TextEntry1(Vector Name)\" \"velocity\")(cx-gui-do cx-set-list-selections \"Vectors*Table1*Table3*Frame6*List2(Surfaces)\" '( 2))(cx-gui-do cx-activate-item \"Vectors*Table1*Table3*Frame6*List2(Surfaces)\")(cx-gui-do cx-set-list-selections \"Vectors*Table1*Table3*Frame6*List2(Surfaces)\" '( 1 2))(cx-gui-do cx-activate-item \"Vectors*Table1*Table3*Frame6*List2(Surfaces)\")(cx-gui-do cx-set-list-selections \"Vectors*Table1*Table3*Frame6*List2(Surfaces)\" '( 1 2 3))(cx-gui-do cx-activate-item \"Vectors*Table1*Table3*Frame6*List2(Surfaces)\")(cx-gui-do cx-set-list-selections \"Vectors*Table1*Table3*Frame6*List2(Surfaces)\" '( 1 2 3 4))(cx-gui-do cx-activate-item \"Vectors*Table1*Table3*Frame6*List2(Surfaces)\")(cx-gui-do cx-set-list-selections \"Vectors*Table1*Table3*Frame6*List2(Surfaces)\" '( 1 2 3 4 8))(cx-gui-do cx-activate-item \"Vectors*Table1*Table3*Frame6*List2(Surfaces)\")(cx-gui-do cx-set-list-selections \"Vectors*Table1*Table3*Frame6*List2(Surfaces)\" '( 1 2 3 4 8 9))(cx-gui-do cx-activate-item \"Vectors*Table1*Table3*Frame6*List2(Surfaces)\")(cx-gui-do cx-set-list-selections \"Vectors*Table1*Table3*Frame6*List2(Surfaces)\" '( 1 2 3 4 7 8 9))(cx-gui-do cx-activate-item \"Vectors*Table1*Table3*Frame6*List2(Surfaces)\")(cx-gui-do cx-set-list-selections \"Vectors*Table1*Table3*Frame6*List2(Surfaces)\" '( 1 2 3 4 6 7 8 9))(cx-gui-do cx-activate-item \"Vectors*Table1*Table3*Frame6*List2(Surfaces)\")(cx-gui-do cx-set-list-selections \"Vectors*Table1*Table3*Frame6*List2(Surfaces)\" '( 1 2 3 4 5 6 7 8 9))(cx-gui-do cx-activate-item \"Vectors*Table1*Table3*Frame6*List2(Surfaces)\")(cx-gui-do cx-set-list-selections \"Vectors*Table1*Frame2*DropDownList2(Style)\" '( 3))")
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "Vectors*Table1*Frame2*DropDownList2(Style)")')
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "Vectors*PanelButtons*PushButton1(OK)")')
setup1.SendCommand(Command="(cx-gui-do cx-set-real-entry-list \"Vectors*Table1*Frame2*Frame3*RealEntry1(Scale)\" '( 0.5))(cx-gui-do cx-activate-item \"Vectors*PanelButtons*PushButton1(OK)\")")
setup1.SendCommand(Command="(cx-use-window-id 1)(cx-set-camera-relative '(0.0043026 0.024417 0.00387587) '(0 0 0) '(0.303221 -0.0523999 -0.00903349) 0 0)(cx-use-window-id 1)(cx-set-camera-relative '(-0.00261118 -0.0413358 -0.00897139) '(0 0 0) '(-0.516076 0.0323349 0.0441474) 0 0)(cx-gui-do cx-set-real-entry-list \"Vectors*Table1*Frame2*Frame3*RealEntry1(Scale)\" '( 0.8))(cx-gui-do cx-activate-item \"Vectors*PanelButtons*PushButton1(OK)\")")
setup1.SendCommand(Command="(cx-use-window-id 1)(cx-set-camera-relative '(0.113236 -0.195678 0.0454935) '(0 0 0) '(-0.555542 -0.32189 0.00617934) 0 0)(cx-gui-do cx-activate-item \"Vectors*PanelButtons*PushButton1(OK)\")")
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "Vectors*PanelButtons*PushButton2(Cancel)")')
setup1.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Results|Graphics|Pathlines"))')
setup1.SendCommand(Command='(cx-gui-do cx-set-list-tree-selections "NavigationPane*List_Tree1" (list "Results|Graphics|Pathlines"))(cx-gui-do cx-activate-item "NavigationPane*List_Tree1")')
setup1.SendCommand(Command="(cx-gui-do cx-set-list-tree-selections \"NavigationPane*List_Tree1\" (list \"Results|Graphics|Pathlines\"))(cx-gui-do cx-set-list-selections \"Pathlines*Frame4*List3(Release from Surfaces)\" '( 8))(cx-gui-do cx-activate-item \"Pathlines*Frame4*List3(Release from Surfaces)\")(cx-gui-do cx-activate-item \"Pathlines*PanelButtons*PushButton1(OK)\")")
setup1.SendCommand(Command="(cx-use-window-id 1)(cx-set-camera-relative '(0.0601883 -0.0429227 -0.0232804) '(0 0 0) '(-0.123273 -0.175398 -0.00610153) 0 0)(cx-gui-do cx-set-integer-entry \"Pathlines*Frame3*Frame2*IntegerEntry4(Path Skip)\" 8)(cx-gui-do cx-activate-item \"Pathlines*Frame3*Frame2*IntegerEntry4(Path Skip)\")")
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "Pathlines*PanelButtons*PushButton1(OK)")')
setup1.SendCommand(Command="(cx-use-window-id 1)(cx-set-camera-relative '(0.0750644 -0.0291576 -0.0307845) '(0 0 0) '(-0.0882359 -0.214247 -0.0258111) 0 0)(cx-use-window-id 1)(cx-set-camera-relative '(-0.04666 0.0348599 0.0126497) '(0 0 0) '(0.436824 0.581899 -0.0016704) 0 0)(cx-use-window-id 1)(cx-set-camera-relative '(0.0202846 -0.0220513 0.000376575) '(0 0 0) '(-0.275246 -0.25239 -0.00643422) 0 0)(cx-gui-do cx-set-integer-entry \"Pathlines*Frame3*Frame2*IntegerEntry4(Path Skip)\" 7)(cx-gui-do cx-activate-item \"Pathlines*Frame3*Frame2*IntegerEntry4(Path Skip)\")")
setup1.SendCommand(Command='(cx-gui-do cx-set-integer-entry "Pathlines*Frame3*Frame2*IntegerEntry4(Path Skip)" 6)(cx-gui-do cx-activate-item "Pathlines*Frame3*Frame2*IntegerEntry4(Path Skip)")')
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "Pathlines*PanelButtons*PushButton1(OK)")')
setup1.SendCommand(Command="(cx-use-window-id 1)(cx-set-camera-relative '(-0.071446 0.131674 -0.00734722) '(0 0 0) '(0.741176 0.399532 -0.0477109) 0 0)(cx-use-window-id 1)(cx-set-camera-relative '(0.0146078 -0.0427455 0.0424106) '(0 0 0) '(-0.246065 -0.0455588 0.0593821) 0 0)(cx-gui-do cx-set-list-selections \"Pathlines*Frame4*List3(Release from Surfaces)\" '( 3 8))(cx-gui-do cx-activate-item \"Pathlines*Frame4*List3(Release from Surfaces)\")(cx-gui-do cx-set-list-selections \"Pathlines*Frame4*List3(Release from Surfaces)\" '( 3))(cx-gui-do cx-activate-item \"Pathlines*Frame4*List3(Release from Surfaces)\")(cx-gui-do cx-activate-item \"Pathlines*PanelButtons*PushButton1(OK)\")")
setup1.SendCommand(Command="(cx-use-window-id 1)(cx-set-camera-relative '(0.0171393 -0.0229172 -0.0158176) '(0 0 0) '(-0.555623 -0.447136 -0.0624153) 0 0)(cx-gui-do cx-activate-item \"Pathlines*PanelButtons*PushButton1(OK)\")")
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "Pathlines*PanelButtons*PushButton2(Cancel)")')
setup1.SendCommand(Command='(cx-use-window-id 1)(handle-key "control ??")(cx-use-window-id 1)(handle-key "control s")(cx-use-window-id 1)(handle-key "control s")(cx-use-window-id 1)(handle-key "control s")(cx-use-window-id 1)')
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "ToolBar*Workbench Tools*fl_run_calculation")')
setup1.SendCommand(Command="(cx-use-window-id 1)")
setup1.SendCommand(Command='(cx-gui-do cx-activate-item "MenuBar*FileMenu*Close Fluent")(cx-gui-do cx-set-toggle-button2 "Settings have changed!*Table1*ToggleBox2*Use settings changes for current and future calculations" #t)(cx-gui-do cx-activate-item "Settings have changed!*Table1*ToggleBox2*Use settings changes for current and future calculations")(cx-gui-do cx-activate-item "Settings have changed!*PanelButtons*PushButton1(OK)")')
Save(Overwrite=True)
